print(confMat)
conf = as.data.frame(confMat$table)
melted_conf <- melt(conf)
setwd(path)
#filename = "class_pred_"
#pdf(paste(filename, ".pdf", sep=""), width=4, height=4)
#par(mar=c(4,4,1,1))
#ggplot(data = melted_conf, aes(x=Prediction, y=Reference, fill=value)) + geom_tile()
#dev.off()
# For display in R
ggplot(data = melted_conf, aes(x=Prediction, y=Reference, fill=value)) + geom_tile()
setwd(dirFol)
}
plotResultsPredictionRegression <- function(prediction, testdata, modele){
print("Model")
print(modele)
RMSE_Kappa = postResample(pred = prediction, obs = testdata)
print(RMSE_Kappa)
print("Best tune:")
print(modele$bestTune)
print("Final model")
print(modele$finalModel)
plot(modele$finalModel, main = paste(deparse(substitute(modele)),"_Acidez_regression"))
varImp(modele)
plot(modele)
}
plot(Total_pred,testingTotal$PuntajeTotal)
path = "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/RF_models_perfs/"
plotResultsPredictionClassification(prediction = Category_pred,testdata = testingCategory, RFmodelCategory,path)
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelTotal)
plot(Total_pred, testingTotal$PuntajeTotal, xlab = "Prediction", ylab = "Actual data", main = "Prediction of Puntaje Total"
,xlim = c(40,90))
plotResultsPredictionRegression(Acidez_pred, testingAcidez$Acidez, RFmodelAcidez)
plot(Acidez_pred, testingAcidez$Acidez, xlab = "Prediction", ylab = "Actual data", main = "Prediction of Acidez")
plotResultsPredictionRegression(Dulzor_pred, testingDulzor$Dulzor, RFmodelDulzor)
plot(Dulzor_pred, testingDulzor$Dulzor)
library('randomForest')
library("caret")
rm(list=ls())
if(.Platform$OS.type == "unix") {
library(doMC)
registerDoMC(cores = 20)
}else{
dirFol <- "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/"
setwd(dirFol)
}
datName <- "DataRisaralda_v2Numeric_Complete_cat_utf-8.csv"
dataset_categories   <- read.csv(datName,row.names=1)
dataset_categories$Variedad <- NULL
datName <- "DataRisaralda_v2_R_Dulzor_utf-8.csv"
dataset_dulzor   <- read.csv(datName,row.names=1)
dataset_dulzor$Variedad <- NULL
datName <- "DataRisaralda_v2_R_Acidez_utf-8.csv"
dataset_acidez   <- read.csv(datName,row.names=1)
dataset_acidez$Variedad <- NULL
datName <- "DataRisaralda_v2_R_Total_utf-8.csv"
dataset_total   <- read.csv(datName,row.names=1)
dataset_total$Variedad <- NULL
dataset_categories$Category= as.factor(dataset_categories$Category)
varCoeff <- round(apply(dataset_total,2,sd)/apply(dataset_total,2,mean)*100,2)
df10 = dataset_total[,varCoeff > 10]
df10$PuntajeTotal = dataset_total$PuntajeTotal
dim(df10)
varCoeff <- round(apply(dataset_total,2,sd)/apply(dataset_total,2,mean)*100,2)
df20 = dataset_total[,varCoeff > 20]
df20$PuntajeTotal = dataset_total$PuntajeTotal
dim(df20)
rm(list=ls())
library('randomForest')
library("caret")
library(mlbench)
library(ggplot2)
library(reshape2)
if(.Platform$OS.type == "unix") {
library(doMC)
registerDoMC(cores = 20)
}else{
dirFol <- "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/"
setwd(dirFol)
}
setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/VariabilityAnalysis/models/")
load("RFmodelPuntajeVariability10.RData")
load("RFmodelDulzorVariability10.RData")
load("RFmodelCategoresVariability10.RData")
load("RFmodelPuntajeVariability20.RData")
load("RFmodelDulzorVariability20.RData")
load("RFmodelCategoresVariability20.RData")
load("DataVariabilityRF.RData")
setwd(dirFol)
partPlots <- function(modele, save = TRUE){
imp = randomForest::importance(modele$finalModel)
print(imp)
impvar = rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/VariabilityAnalysis/plots/")
for (i in seq_along(impvar)) {
file_name = paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep="")
png(file_name, width=4, height=4, units="in", res=300)
par(mar=c(4,4,1,1))
exp = paste("partialPlot(modele$finalModel, modele$trainingData,x.var=",impvar[i],", xlab=impvar[i], main=paste('Partial Dependence on', impvar[i]))")
eval(parse(text=exp))
#partialPlot(modele$finalModel, modele$trainingData,x.var=impvar[i], xlab=impvar[i], main=paste("Partial Dependence on", impvar[i]))
dev.off()
}
setwd(dirFol)
#par(op)
}
Total_pred10 <- predict(RFmodelPuntajeVariability10, testingTotal10)
Total_pred20 <- predict(RFmodelPuntajeVariability20, testingTotal20)
Dulzor_pred10 <- predict(RFmodelDulzorVariability10, testingDulzor10)
Dulzor_pred20 <- predict(RFmodelDulzorVariability20, testingDulzor20)
Category_pred10 <- predict(RFmodelCategoresVariability10, testingCategory10)
Category_pred20 <- predict(RFmodelCategoresVariability20, testingCategories20)
partPlots(RFmodelPuntajeVariability10)
partPlots(RFmodelPuntajeVariability20)
partPlots(RFmodelDulzorVariability10)
plot(Total_pred10,testingTotal10$PuntajeTotal)
plot(Total_pred20,testingTotal20$PuntajeTotal)
plot(Category_pred10,testingCategory10$Category)
plot(Category_pred20,testingCategory20$Category)
plot(Total_pred10,testingTotal10$PuntajeTotal, xlim = c(0,80))
plot(Total_pred20,testingTotal20$PuntajeTotal)
plot(Total_pred10,testingTotal10$PuntajeTotal, xlim = c(0,80), xlab = "Prédiction", ylab = "Valeur actuelle")
plot(Total_pred20,testingTotal20$PuntajeTotal, xlim = c(0,80), xlab = "Prédiction", ylab = "Valeur actuelle")
plot(Total_pred10,testingTotal10$PuntajeTotal, xlim = c(0,80), xlab = "Prédiction", ylab = "Valeur actuelle")
plot(Total_pred20,testingTotal20$PuntajeTotal, xlim = c(0,80), xlab = "Prédiction", ylab = "Valeur actuelle")
rm(list=ls())
path <- "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/"
setwd(path)
filename <- "DataRisaralda_v2Numeric_Complete_utf-8.csv"
data = read.csv(filename, header=T, sep=",")
summary(data)
plot(data$ASNM)
plot(data$ASNM, data$PuntajeTotal)
plot(data$ASNM, data$PuntajeTotal, ylab = "Points Totaux", xlab = "Altitude [m]")
dim(data)
filename <- "DataRisaralda_v2_utf-8.csv"
data = read.csv(filename, header=T, sep=",")
summary(data)
plot(data$ASNM, data$PuntajeTotal, ylab = "Points Totaux", xlab = "Altitude [m]")
data
dim(data)
summary(data)
plot(data$PrecTotalAvg, data$PuntajeTotal, ylab = "Points Totaux", xlab = "Altitude [m]")
plot(data$PrecTotalAvg, data$PuntajeTotal, ylab = "Points Totaux", xlab = "Moyenne des précipitations totales")
summary(data$PrecTotalAvg)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2_R_PCA_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
plot(cafe.pca, type = "l")
g <- ggbiplot(cafe.pca,choices = c(ax1,ax2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
rm(list=ls())
initPackages <- function(){
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
}
initPackages()
install.packages("devtools")
initPackages()
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2_R_PCA_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
datayear = data
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
g <- ggbiplot(cafe.pca,choices = c(ax1,ax2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
g <- ggbiplot(cafe.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
g <- g + scale_color_discrete(name = 'PCA')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
COLOR <- c(2:4)
PCH <- c(1,16)
pc <- c(1,2) # principal components to plot
plot(cafe.pca$x[,pc], col=COLOR[datayear$year], cex=PCH[1],
xlab=paste0("PC ", pc[1], " (", expl.var[pc[1]], "%)"),
ylab=paste0("PC ", pc[2], " (", expl.var[pc[2]], "%)")
)
expl.var <- round(cafe.pca$sdev^2/sum(cafe.pca$sdev^2)*100) # percent explained variance
plot(cafe.pca$x[,pc], col=COLOR[datayear$year], cex=PCH[1],
xlab=paste0("PC ", pc[1], " (", expl.var[pc[1]], "%)"),
ylab=paste0("PC ", pc[2], " (", expl.var[pc[2]], "%)")
)
biplot(cafe.pca)
ggbiplot(cafe.pca, obs.scale = 1, var.scale = 1, group=datayear$year,
varname.size = 3, labels.size=3, ellipse = TRUE, circle = TRUE) +
scale_color_manual(name="Variety", values=c("orange", "purple", "green")) +
scale_shape_manual(name="Variety", values=c(17:19)) +
geom_point(aes(colour=datayear$year, shape=datayear$year), size = 3) +
theme(legend.direction ="horizontal",
legend.position = "top")
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
autoplot(cafe.pca)
autoplot(cafe.pca, data = datayear, colour = 'year')
autoplot(cafe.pca, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
g <- ggbiplot(cafe.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
g <- g + scale_color_discrete(name = 'PCA')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
rm(list=ls())
initPackages <- function(){
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
}
plotdata <- function(datos,data, ax1 = 1, ax2 = 2){
#cafe.class = as.factor(data[,ncol(data)])
#cafe.class = as.factor(data[,'year'])
cafe.pca <- prcomp( datos,
center = TRUE,
scale. = TRUE)
plot(cafe.pca, type = "l")
#g <- ggbiplot(cafe.pca,choices = c(ax1,ax2), obs.scale = 1, var.scale = 1, groups = cafe.class, ellipse = TRUE, var.axes = FALSE, varname.size = 3, circle = FALSE)
pdf("pca_simplified.pdf",width=6,height=4,paper='special')
g <- ggbiplot(cafe.pca,choices = c(ax1,ax2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
#g <- g + scale_color_discrete(name = 'Coffee Classes (1 = Outstanding, 2 = excellent, 3 = very good, 4 = below specialty quality)')
g <- g + scale_color_discrete(name = 'PCA')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
dev.off()
return(cafe.pca)
}
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2_R_PCA_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
initPackages()
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2_R_PCA_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
summary(data)
pca = plotdata(data, data, ax1 = 1, ax2 = 2)
print(pca$x)
print(pca$rotation)
write.csv(pca$rotation, file = "PCA_Rotation_Minimal.csv")
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
climatdata = subset(data,select = names(data) %ni% to.remove)
climatdata$Aroma.Fragancia <- NULL
summary(climatdata)
pca = plotdata(climatdata, data, ax1 = 1, ax2 = 2)
print(pca$x)
print(pca$rotation)
write.csv(pca$rotation, file = "PCA_Rotation_Complete.csv")
setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PCA/")
dataset = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
dataset   <- dataset[dataset$PuntajeTotal != 0,]
data = dataset
dim(summary(data))
to.remove <- c("SICA","year","PuntajeTotal","Category","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
summary(data)
dim(summary(data))
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
plot(cafe.pca, type = "l")
g <- ggbiplot(cafe.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
g <- g + scale_color_discrete(name = 'PCA')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(cafe.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
print(cafe.pca$rotation)
library(FactoMineR)
nbCluster = 3
nbComp = 9
res.pca = PCA(data, scale.unit=TRUE, ncp=nbComp,quali.sup = 63, graph=TRUE)
res.pca$ind
install.packages("FactoMineR")
res.pca = PCA(data, scale.unit=TRUE, ncp=nbComp,quali.sup = 63, graph=TRUE)
res.pca$ind
library(FactoMineR)
nbCluster = 3
nbComp = 9
res.pca = PCA(data, scale.unit=TRUE, ncp=nbComp,quali.sup = 63, graph=TRUE)
cafe2.pca = PCA(data, scale.unit=TRUE, ncp=nbComp,quali.sup = 63, graph=TRUE)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2_R_PCA_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
datayear = data
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
cafe2.pca = PCA(data, scale.unit=TRUE, ncp=nbComp,quali.sup = 63, graph=TRUE)
library(ggfortify)
cafe2.pca = PCA(data, scale.unit=TRUE, ncp=nbComp, graph=TRUE)
library(ggfortify)
autoplot(cafe2.pca, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
autoplot(cafe2.pca$svd, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
autoplot(cafe2.pca$var, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
autoplot(cafe.pca$var, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
autoplot(cafe.pca$var, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
g <- ggbiplot(cafe.pca, choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2_R_PCA_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
datayear = data
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
cafe2.pca = PCA(data, scale.unit=TRUE, ncp=nbComp, graph=TRUE)
autoplot(cafe.pca$var, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
cafe.pca
autoplot(cafe.pca, data = datayear, colour = 'year', shape = FALSE, label.size = 3)
autoplot(cafe.pca, data = datayear, colour = 'year', shape = TRUE, label.size = 3)
g <- ggbiplot(cafe.pca, choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
g <- ggbiplot(cafe2.pca, choices = c(1,2), obs.scale = 1, var.scale = 1, ellipse = TRUE, var.axes = FALSE, varname.size = 3,
circle = FALSE)
g <- g + scale_color_discrete(name = 'PCA')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
autoplot(cafe.pca, data = datayear, colour = 'Category', shape = TRUE, label.size = 3)
datayear
autoplot(cafe.pca, data = data, colour = 'category', shape = TRUE, label.size = 3)
datayear
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_cat_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
datayear = data
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
data
data.columns
summary(data)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_cat_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
summary(data)
to.remove <- c("Variedad")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
datayear = data
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
data
summary(data)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_cat_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
summary(data)
to.remove <- c("Variedad")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
summary(data)
data   <- data[data$PuntajeTotal != 0,]
summary(data)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_cat_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
to.remove <- c("Variedad")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
summary(data)
datayear = data
to.remove <- c("SICA","year","Category","PuntajeTotal","PuntajeCatador","TazaLimpia","Balance","Uniformidad","Dulzor","SaborResidual","Sabor","Cuerpo","Acidez","Aroma.Fragrancia","DefectosTotales")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
data$Aroma.Fragancia <- NULL
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
cafe2.pca = PCA(data, scale.unit=TRUE, ncp=nbComp, graph=TRUE)
autoplot(cafe.pca, data = datayear, colour = 'year', shape = TRUE, label.size = 3)
autoplot(cafe.pca, data = data, colour = 'category', shape = TRUE, label.size = 3)
autoplot(cafe.pca, data = data, colour = 'Category', shape = TRUE, label.size = 3)
data
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_cat_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
to.remove <- c("Variedad")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
autoplot(cafe.pca, data = datayear, colour = 'Category', shape = TRUE, label.size = 3)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_CompleteV2_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
to.remove <- c("Variedad")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
summary(data)
data = read.csv("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/DataAnalysis/data/DataRisaralda_v2Numeric_Complete_utf-8.csv",
header=T,
row.names = 1,
sep=",",
stringsAsFactors = TRUE)
to.remove <- c("Variedad")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
summary(data)
data   <- data[data$PuntajeTotal != 0,]
print(dim(data))
summary(data)
datayear = data
to.remove <- c("SICA","year","Category")
`%ni%` <- Negate(`%in%`)
data = subset(data,select = names(data) %ni% to.remove)
cafe.pca <- prcomp( data,
center = TRUE,
scale. = TRUE)
cafe2.pca = PCA(data, scale.unit=TRUE, ncp=nbComp, graph=TRUE)
autoplot(cafe.pca, data = datayear, colour = 'year', shape = TRUE, label.size = 3)
autoplot(cafe.pca, data = datayear, colour = 'Category', shape = TRUE, label.size = 3)
data
