install.packages(c("caret", "snowfall"))
library("caret", lib.loc="~/R/win-library/3.0")
library("gtools", lib.loc="~/R/win-library/3.0")
install.packages("caret")
library("caret", lib.loc="~/R/win-library/3.0")
rm(list=ls())
library(caret)
library(mlbench)
library(ggplot2)
library(reshape2)
if(.Platform$OS.type == "unix") {
library(doMC)
registerDoMC(cores = 20)
}else{
dirFol <- "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/"
setwd(dirFol)
}
load('TrainedModels.RData')
Total_pred <- predict(RFmodelTotal, testingTotal)
Acidez_pred <- predict(RFmodelAcidez, testingAcidez)
Dulzor_pred <- predict(RFmodelDulzor, testingDulzor)
nnetPred <- predict(nnetFit, testingCategoryNum)
Category_pred <- predict(RFmodelCategory, testingCategory)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
#op <- par(mfrow=c(2, 3))
setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
dev.off()
}
setwd(dirFol)
#par(op)
}
plotResultsPredictionClassification <- function(prediction, testdata,modele, filename){
print(modele)
varImp(modele)
accKappa = postResample(pred = prediction, obs = testdata$Category)
print(accKappa)
confMat = confusionMatrix(prediction, testdata$Category)
print(confMat)
conf = as.data.frame(confMat$table)
melted_conf <- melt(conf)
#png(paste(filename, "test.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
ggplot(data = melted_conf, aes(x=Prediction, y=Reference, fill=value)) + geom_tile()
#dev.off()
}
plotResultsPredictionRegression <- function(prediction, testdata, modele, filename){
print("Model")
print(modele)
RMSE_Kappa = postResample(pred = prediction, obs = testdata)
print(RMSE_Kappa)
print("Best tune:")
print(modele$bestTune)
print("Final model")
print(modele$finalModel)
plot(modele$finalModel)
varImp(modele)
}
plotResultsPredictionClassification(prediction = Category_pred,testdata = testingCategory, RFmodelCategory, "testclassification")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelTotal, "testRegression")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelAcidez, "testRegression")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelDulzor, "testRegression")
plotAndSavePartialplots(RFmodelTotal)
dev.off()
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
print(imp)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
#op <- par(mfrow=c(2, 3))
setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelTotal)
rownames(imp)[order(imp[, 1], decreasing=TRUE)]
imp <- importance(modele$finalModel)
imp <- importance(RFmodelAcidez$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
impvar
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelTotal)
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
print(i)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
print(i)
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
print(i)
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
seq_along(impvar)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
print(i)
j = as.numeric(i)
print(j)
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
#partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
print(i)
j = as.numeric(i)
print(j)
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[j], xlab=impvar[j],main=paste("Partial Dependence on", impvar[j]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots(RFmodelCategory)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots(RFmodelCategory)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
#op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
#partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
#par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots(RFmodelCategory)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
#partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
i
seq_along(impvar)
model=RFmodelAcidez
imp <- importance(modele$finalModel)
modele=RFmodelAcidez
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
#print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#print(impvar[i])
png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
par(mar=c(4,4,1,1))
partialPlot(modele$finalModel, modele$trainingData, impvar[i], xlab=impvar[i],main=paste("Partial Dependence on", impvar[i]))
dev.off()
}
#setwd(dirFol)
par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel,
modele$trainingData,
impvar[i],
xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
par(op)
}
windows()
plotAndSavePartialplots(RFmodelAcidez)
# Validation des modèles
rm(list=ls())
library(caret)
library(mlbench)
library(ggplot2)
library(reshape2)
if(.Platform$OS.type == "unix") {
library(doMC)
registerDoMC(cores = 20)
}else{
dirFol <- "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/"
setwd(dirFol)
}
load('TrainedModels.RData')
# http://machinelearningmastery.com/tune-machine-learning-algorithms-in-r/
# Models received from the script "modelsTraining.R"
#
# RFmodelCategory
# RFmodelTotal
# RFmodelAcidez
# RFmodelDulzor
# nnetFit
# REGARDER AVEC PYTHON: https://github.com/jazdev/genreXpose/blob/master/genreXpose/utils.py
# Predictions with the continuous outputs
Total_pred <- predict(RFmodelTotal, testingTotal)
Acidez_pred <- predict(RFmodelAcidez, testingAcidez)
Dulzor_pred <- predict(RFmodelDulzor, testingDulzor)
# Prediction with the nnet
nnetPred <- predict(nnetFit, testingCategoryNum)
# Prediction with the Category output
Category_pred <- predict(RFmodelCategory, testingCategory)
########################################################################
########################################################################
# Partial plots
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel,
modele$trainingData,
impvar[i],
xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
par(op)
}
# Plot the results of classification
plotResultsPredictionClassification <- function(prediction, testdata,modele, filename){
print(modele)
varImp(modele)
accKappa = postResample(pred = prediction, obs = testdata$Category)
print(accKappa)
confMat = confusionMatrix(prediction, testdata$Category)
print(confMat)
conf = as.data.frame(confMat$table)
melted_conf <- melt(conf)
#png(paste(filename, "test.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
ggplot(data = melted_conf, aes(x=Prediction, y=Reference, fill=value)) + geom_tile()
#dev.off()
}
plotResultsPredictionRegression <- function(prediction, testdata, modele, filename){
print("Model")
print(modele)
RMSE_Kappa = postResample(pred = prediction, obs = testdata)
print(RMSE_Kappa)
print("Best tune:")
print(modele$bestTune)
print("Final model")
print(modele$finalModel)
plot(modele$finalModel)
varImp(modele)
}
plotResultsPredictionClassification(prediction = Category_pred,testdata = testingCategory, RFmodelCategory, "testclassification")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelTotal, "testRegression")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelAcidez, "testRegression")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelDulzor, "testRegression")
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots(RFmodelCategory)
rm(list=ls())
library(caret)
library(mlbench)
library(ggplot2)
library(reshape2)
if(.Platform$OS.type == "unix") {
library(doMC)
registerDoMC(cores = 20)
}else{
dirFol <- "C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/"
setwd(dirFol)
}
load('TrainedModels.RData')
Total_pred <- predict(RFmodelTotal, testingTotal)
Acidez_pred <- predict(RFmodelAcidez, testingAcidez)
Dulzor_pred <- predict(RFmodelDulzor, testingDulzor)
nnetPred <- predict(nnetFit, testingCategoryNum)
Category_pred <- predict(RFmodelCategory, testingCategory)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel,
modele$trainingData,
impvar[i],
xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
par(op)
}
plotResultsPredictionClassification <- function(prediction, testdata,modele, filename){
print(modele)
varImp(modele)
accKappa = postResample(pred = prediction, obs = testdata$Category)
print(accKappa)
confMat = confusionMatrix(prediction, testdata$Category)
print(confMat)
conf = as.data.frame(confMat$table)
melted_conf <- melt(conf)
#png(paste(filename, "test.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
ggplot(data = melted_conf, aes(x=Prediction, y=Reference, fill=value)) + geom_tile()
#dev.off()
}
plotResultsPredictionRegression <- function(prediction, testdata, modele, filename){
print("Model")
print(modele)
RMSE_Kappa = postResample(pred = prediction, obs = testdata)
print(RMSE_Kappa)
print("Best tune:")
print(modele$bestTune)
print("Final model")
print(modele$finalModel)
plot(modele$finalModel)
varImp(modele)
}
plotResultsPredictionClassification(prediction = Category_pred,testdata = testingCategory, RFmodelCategory, "testclassification")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelTotal, "testRegression")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelAcidez, "testRegression")
plotResultsPredictionRegression(Total_pred, testingTotal$PuntajeTotal, RFmodelDulzor, "testRegression")
plotAndSavePartialplots(RFmodelAcidez)
plotAndSavePartialplots(RFmodelCategory)
plotAndSavePartialplots <- function(modele){
imp <- importance(modele$finalModel)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
print(impvar)
op <- par(mfrow=c(2, 3))
#setwd("C:/Users/thsch/Desktop/Bachelor_Thesis_2017_Sources/Notebook/R/Projects/BachelorThesis/PartialPlots/")
for (i in seq_along(impvar)) {
#print(impvar[i])
#png(paste(deparse(substitute(modele)),"_",impvar[i], "_PartialPlot.png", sep=""), width=4, height=4, units="in", res=300)
#par(mar=c(4,4,1,1))
partialPlot(modele$finalModel,
modele$trainingData,
impvar[i],
xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
#dev.off()
}
#setwd(dirFol)
par(op)
}
plotAndSavePartialplots(RFmodelAcidez)
